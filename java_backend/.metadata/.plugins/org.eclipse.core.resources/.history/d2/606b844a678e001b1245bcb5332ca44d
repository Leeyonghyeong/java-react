package com.ld.word.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.ld.word.domain.Word;
import com.ld.word.domain.WordRepository;

import lombok.RequiredArgsConstructor;


// @service 는 기능을 정의 할 수 있고, 트랜잭션을 관리할 수 있음.
@RequiredArgsConstructor
@Service
public class WordService {
	
	@Autowired
	private WordRepository wordRepository;
	
	@Transactional // 서비스 함수가 종료 될 때 commit 할지 rollback 할지 트랜잭션 관리
	public Word register(Word word) {
		return wordRepository.save(word);
	}
	
	@Transactional(readOnly = true) // JPA 변경감지란느 내부 기능 활성화X, update시의 정합성을 유지해줌, insert의 유령데이터현상(팬텀현상) 못막음
	public List<Word> getAllWord(String userid) {
		return wordRepository.findAll();
	}
	
	@Transactional
	public Word updateWord(Long id) {
		return null;
	}
	
	public void deleteWord(int id) {
		
	}
}
